[
    {
        "sql": "DECLARE\n  -- Local variables here\n  i NUMBER;\nBEGIN\n  -- Test statements here\n  dbms_output.put_line('Hello World!');\nEND;",
        "delimiter": "/"
    },
    {
        "sql": "\nselect * from a",
        "delimiter": ";"
    },
    {
        "sql": "\ncreate or replace PROCEDURE ab1 as\nbegin \nselect * from b;\nend;",
        "delimiter": "/"
    },
    {
        "sql": "\nCREATE TYPE data_typ1 AS OBJECT\n  ( year NUMBER,\n  MEMBER FUNCTION prod(invent NUMBER) RETURN NUMBER\n  );",
        "delimiter": "/"
    },
    {
        "sql": "\nCREATE TYPE BODY data_typ1 IS\n  MEMBER FUNCTION prod (invent NUMBER) RETURN NUMBER IS\n  BEGIN\n    RETURN (year + invent);\n  END;\nEND;",
        "delimiter": "/"
    },
    {
        "sql": "\ncreate or replace function adder(n1 in number, n2 in number)\n  return number\n  is\n  n3 number(8);\n  begin\n  n3 :=n1+n2;\n  return n3;\n  end;",
        "delimiter": "/"
    },
    {
        "sql": "\ncreate or replace package Test_Package_Func_Proc\n  as\n   function  test_func  (in_val in number) return number;\n   procedure test_proc (in_val in number);\n  end;",
        "delimiter": "/"
    },
    {
        "sql": "\ncreate or replace package body Test_Package_Func_Proc\n  as\n  function test_func (in_val in number) return number\n  is\n  begin\n  return in_val;\n  exception\n  when others then\n  RAISE;\n  end;\n  procedure test_proc  (in_val in number)\n  is\n  begin\n  dbms_output.put_line (in_val);\n  exception\n  when others then\n  RAISE;\n  end;\n  end;",
        "delimiter": "/"
    },
    {
        "sql": "\n   -- 特点是以 create <or replace>  <EDITIONABLE|NONEDITIONABLE> trigger 开始\n  -- 程序块 begin 开始，end 结束\n  CREATE OR REPLACE trigger tri_dept\n  before insert or update or delete\n  on dept --创建触发器，当dept 表发生插入，修改，删除操作时引起该触发器执行\n  declare\n  var_tag varchar2(10);  --声明一个变量，存储对dept表执行的操作类\n  begin\n  if inserting then  --当触发事件是insert时\n  var_tag:='插入';   --标识插入操作\n  elsif updating then  --当触发事件是update时\n  var_tag:='修改';  --标识修改操作\n  elsif deleting then  --当触发事件是delete时\n  var_tag:='删除';  --标识删除操作\n  end if;\n  INSERT INTO dept_log VALUES (var_tag,sysdate); --向日志表中插入对dept表的操作信息\n  end tri_dept;",
        "delimiter": "/"
    },
    {
        "sql": "\nCREATE OR REPLACE trigger tri_dept\n  before insert or update or delete\n  on dept --创建触发器，当dept 表发生插入，修改，删除操作时引起该触发器执行\n  declare\n  var_tag varchar2(10);  --声明一个变量，存储对dept表执行的操作类\n  begin\n  if inserting then  --当触发事件是insert时\n  var_tag:='插入';   --标识插入操作\n  elsif updating then  --当触发事件是update时\n  var_tag:='修改';  --标识修改操作\n  elsif deleting then  --当触发事件是delete时\n  var_tag:='删除';  --标识删除操作\n  end if;\n  INSERT INTO dept_log VALUES (var_tag,sysdate); --向日志表中插入对dept表的操作信息\n  end;",
        "delimiter": "/"
    }
]